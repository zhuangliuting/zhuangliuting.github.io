{"version":3,"sources":["SettingPage.js","FilePage.js","Scanner.js","Layout.js","serviceWorker.js","index.js"],"names":["SubMenu","Menu","CutOff","react_default","a","createElement","divider","style","margin","AttributeStyle","padding","SettingPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleCollapsed","setState","collapsed","state","onResolutionChange","e","value","target","onScanSettinfChange","showMenu","content","selectedTags","Fragment","className","page_header","onBack","onBackClick","title","menu","mode","theme","inlineCollapsed","key","icon","type","Item","es_radio","Group","paddingLeft","onChange","ItemGroup","left","es_switch","onChangeRegionMode","float","right","card","es_button","size","onClick","React","Component","FilePage","showFile","console","log","Canvas","isDraw","canvas","createRef","point","x1","split","y1","x2","y2","x3","y3","x4","y4","leftMin","Math","min","topMin","_x1","_x2","_x3","_x4","_y1","_y2","_y3","_y4","current","getContext","ctx","fillStyle","clearRect","width","height","beginPath","moveTo","lineTo","fill","rightMax","max","bottomMax","cvsStyle","position","top","ref","Dynamsoft","window","scanner","Scanner","_this2","resultsInfo","isOpen","resultsPoint","camera","cameraList","isFullRegion","_this3","regionScale","region","regionWidth","innerWidth","regionHeight","innerHeight","updateFrame","bottom","r","getResolution","vW","vH","settings","getRuntimeSettings","measuredByPercentage","updateRuntimeSettings","round","BarcodeScanner","createInstance","intervalTime","UIElement","document","getElementById","onFrameRead","results","resultPointsPerFrame","i","length","result","push","LocalizationResult","ResultPoints","arrDiffCodeInfo","onUnduplicatedRead","txt","then","s","_isOpen","open","paras","getAllCameras","cameras","setCurrentCamera","deviceId","show","close","showScanner","_this4","infos","numOfCamera","config","label","color","message","duration","allCanvas","map","eachResult","index","Scanner_Canvas","react_addons_css_transition_group_default","transitionName","transitionLeave","transitionAppear","transitionEnter","transitionAppearTimeout","transitionLeaveTimeout","transitionEnterTimeout","spin","tip","indicator","fontSize","id","playsInline","Layout_Result","onSwitchCamera","bind","RegionBtn","handleRegion","ScannerArea","maxWidth","maxHeight","timeout","clicks","Main","isShowSettingPage","isShowFilePage","isFullScreen","exitFullscreen","documentElement","requestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","event","preventDefault","Date","getTime","clearTimeout","setTimeout","switchFullScreen","home","src_Scanner","href","src","alt","src_SettingPage_0","handleShowSettingPage","src_FilePage_0","handleShowFilePage","fullSceenClickHandler","EachResult","kUtil","copyToClipBoard","possibleLink","startsWith","indexOf","isLink","format","textDecoration","copyScannerResult","count","Result","resultItems","slice","ri","Layout_EachResult","BarcodeText","BarcodeFormatString","Layout","isShow","Layout_Main","Boolean","location","hostname","match","ReactDOM","render","src_Layout_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.178edee6.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css'\r\nimport { PageHeader,Menu, Icon, Button,Radio, Card,Switch,Divider } from 'antd';\r\nimport './SettingPage.css';\r\nimport './Layout.css'\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nfunction CutOff(){\r\n    return(\r\n        <Divider style={{margin:\"10px 0\"}}/>\r\n    )\r\n}\r\n\r\nconst AttributeStyle = {\r\n    padding:\"5px\"\r\n};\r\n\r\nclass SettingPage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            showMenu:true,\r\n            content:null,\r\n            collapsed: false,\r\n            value: 1,\r\n            selectedTags: [],\r\n        }\r\n    }\r\n\r\n\r\n    toggleCollapsed = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n\r\n    onResolutionChange = e =>{\r\n        this.setState({\r\n            value:e.target.value,\r\n        });\r\n    };\r\n\r\n    onScanSettinfChange = e =>{\r\n        this.setState({\r\n            value:e.target.value,\r\n        });\r\n    };\r\n\r\n    onSettingClick(){\r\n        this.setState({\r\n            showMenu:!this.state.showMenu,\r\n        });\r\n        //console.log(this.state.showMenu);\r\n    }\r\n\r\n    \r\n    render(){\r\n        return(\r\n            <>\r\n                {/* hide the setting button if the  setting page is shown */}\r\n                {/* <div>\r\n                    {\r\n                        !this.state.showMenu && \r\n                        <div className=\"settingBtn-container\">\r\n                            <Icon onClick={this.onSettingClick.bind(this)}  type=\"setting\" style={{fontSize:\"50px\",color:\"wheat\"}}></Icon>\r\n                        </div>\r\n                    }\r\n                </div> */}\r\n                \r\n                {/* show the setting page */}\r\n                \r\n                {\r\n                    !this.state.showMenu ? null:\r\n                    <div className=\"setting-container\">\r\n                        <PageHeader onBack={this.props.onBackClick} title=\"Settings\"  />\r\n                        <Menu\r\n                            //defaultSelectedKeys={['video']}\r\n                            //defaultOpenKeys={['Read Full Region']}\r\n                            mode=\"inline\"\r\n                            theme=\"light\"\r\n                            inlineCollapsed={this.state.collapsed}\r\n                            \r\n                        >\r\n                            {/* Video Source */}\r\n                            <SubMenu\r\n                                key=\"video\"\r\n                                title={\r\n                                <span>\r\n                                    <Icon type=\"camera\" />\r\n                                    <span>Video Source</span>\r\n                                </span>\r\n                                }\r\n                            >\r\n                                <Menu.Item key=\"camera1\">Camera 1</Menu.Item>\r\n                                <Menu.Item key=\"camera2\">Camera 2</Menu.Item>\r\n                            </SubMenu>\r\n\r\n                            <CutOff />\r\n\r\n                            {/* Video Resolution */}\r\n                            <SubMenu\r\n                                key=\"resolution\"\r\n                                title={\r\n                                <span>\r\n                                    <Icon type=\"eye\"/>\r\n                                    <span>Video Resolution</span>\r\n                                </span>\r\n                                }\r\n                            >\r\n                                <Radio.Group style={{paddingLeft:'20px'}} onChange={this.onResolutionChange} value={this.state.value}>\r\n                                    <Radio style={AttributeStyle} value={1}>3080*2160</Radio>\r\n                                    <Radio style={AttributeStyle} value={2}>2560*1440</Radio>\r\n                                    <Radio style={AttributeStyle} value={3}>1929*1080</Radio>\r\n                                    <Radio style={AttributeStyle} value={4}>1600*1200</Radio>\r\n                                    <Radio style={AttributeStyle} value={5}>1280*720</Radio>\r\n                                    <Radio style={AttributeStyle} value={6}>800*600</Radio>\r\n                                    <Radio style={AttributeStyle} value={7}>640*480</Radio>\r\n                                    <Radio style={AttributeStyle} value={8}>640*360</Radio>\r\n                                </Radio.Group>\r\n                            </SubMenu>\r\n\r\n                            <CutOff />\r\n\r\n                            {/* //Barcode Format */}\r\n                            <Menu.ItemGroup key=\"Barcode Format\" title=\"Barcode Format\" icon=\"barcode\">\r\n                                <Menu.Item key=\"1D\" style={{left:\"5px\"}}><h5>1D</h5></Menu.Item>\r\n                                <Menu.Item key=\"PDF417\" style={{left:\"5px\"}}><h5>PDF417</h5></Menu.Item>\r\n                                <Menu.Item key=\"QR Code\" style={{left:\"5px\"}}><h5>QR Code</h5></Menu.Item>\r\n                                <Menu.Item key=\"Data Matrix\" style={{left:\"5px\"}}><h5>Data Matrix</h5></Menu.Item>\r\n                                <Menu.Item key=\"Actec Code\" style={{left:\"5px\"}}><h5>Actec Code</h5></Menu.Item>\r\n                            </Menu.ItemGroup>\r\n                            \r\n                            <CutOff />\r\n\r\n                            {/* //Scan Settings */}\r\n                            <SubMenu\r\n                                key=\"scan\"\r\n                                title={\r\n                                <span>\r\n                                    <Icon type=\"setting\"></Icon>\r\n                                    <span>Scan Settings</span>\r\n                                </span>\r\n                                }\r\n                            >\r\n                                <Radio.Group style={{paddingLeft:'20px'}} onChange={this.onScanSettinfChange} value={this.state.value}>\r\n                                    <Radio style={AttributeStyle} value=\"Fast\">Fast</Radio>\r\n                                    <Radio style={AttributeStyle} value=\"Most Accurate\">Most Accurate</Radio>\r\n                                </Radio.Group>\r\n                                \r\n                            </SubMenu>\r\n\r\n                            <CutOff />\r\n\r\n                            {/* //Read Full Region */}\r\n                            <SubMenu \r\n                                key=\"region\" \r\n                                title={\r\n                                <span>\r\n                                    <Icon type=\"eye\"></Icon>\r\n                                    <span>Read Full Region</span>\r\n                                </span>\r\n                                }\r\n                            >\r\n                                <div>\r\n                                    <Switch onChange={this.onChangeRegionMode} \r\n                                        style={{float:\"right\",right:\"10px\"}}/> \r\n                                    </div>\r\n                            </SubMenu>\r\n                            \r\n                            <CutOff />\r\n\r\n                            {/* About */}\r\n                            <SubMenu\r\n                                key=\"about\"\r\n                                title={\r\n                                <span>\r\n                                    <Icon type=\"bulb\"></Icon>\r\n                                    <span>About Dynamsoft</span>\r\n                                </span>\r\n                                }\r\n                            >\r\n                                <div>\r\n                                    <Card title=\"About\">\r\n                                        <p>\r\n                                        Founded in Sep 2003 with the aim of being the dynamic center of software developers, \r\n                                        Dynamsoft provides enterprise-class document capture and image processing software development kits (SDK),\r\n                                        with numerous generations for each product. Today many Fortune 500 Companies including HP, IBM, Intel, and Siemens trust Dynamsoft solutions.\r\n                                        </p>\r\n                                    </Card>\r\n                                </div>\r\n                            </SubMenu>\r\n                            \r\n                            <CutOff />\r\n                            {/* Clear Cache */}\r\n                            <div className=\"clear-cache\">\r\n                                <Button type=\"primary\" size=\"large\" onClick={()=>null}>\r\n                                    Clear Cache\r\n                                </Button>\r\n                            </div>\r\n                        </Menu>\r\n                    </div>\r\n                }\r\n                \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SettingPage;","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { PageHeader} from 'antd';\r\nimport './FilePage.css';\r\nimport './Layout.css'\r\n\r\n\r\nclass FilePage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            showFile:true,\r\n        }\r\n    }\r\n\r\n    onAddFileClick(){\r\n        this.setState({\r\n            showFile:!this.state.showFile,\r\n        })\r\n        console.log(this.state.showFile);\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                {/* hide the add button if the file page is shown */}\r\n                {/* <div>\r\n                    {\r\n                        !this.state.showFile&&\r\n                        <div className=\"selImgBtn-container\">\r\n                            <Icon onClick={this.onAddFileClick.bind(this)} type=\"plus\" style={{fontSize:\"50px\",color:\"wheat\"}}></Icon>\r\n                        </div>\r\n                    }\r\n                </div> */}\r\n                \r\n                {/* show the file page */}\r\n                {\r\n                    !this.state.showFile?null:\r\n                    <div className=\"file-container\">\r\n                        <PageHeader onBack={this.props.onBackClick} title=\"Files\"  />\r\n                    </div>\r\n                }\r\n            </>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default FilePage;","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {Icon,Spin,message} from 'antd';\r\nimport {Result} from './Layout';\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\nimport './Layout.css'\r\n\r\n\r\nclass Canvas extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            isDraw:false\r\n        });\r\n        this.canvas = React.createRef();\r\n        // this.point = this.props.point;\r\n        // this.x1 = this.point[0].split(',')[0];\r\n        // this.y1 = this.point[0].split(',')[1];\r\n        // this.x2 = this.point[1].split(',')[0];\r\n        // this.y2 = this.point[1].split(',')[1];\r\n        // this.x3 = this.point[2].split(',')[0];\r\n        // this.y3 = this.point[2].split(',')[1];\r\n        // this.x4 = this.point[3].split(',')[0];\r\n        // this.y4 = this.point[3].split(',')[1];\r\n        // this.leftMin = Math.min(this.x1, this.x2, this.x3, this.x4);\r\n        // this.rightMax = Math.max(this.x1, this.x2, this.x3, this.x4);\r\n        // this.topMin = Math.min(this.y1, this.y2, this.y3, this.y4);\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        let point = this.props.point;\r\n        let x1 = point[0].split(',')[0];\r\n        let y1 = point[0].split(',')[1];\r\n        let x2 = point[1].split(',')[0];\r\n        let y2 = point[1].split(',')[1];\r\n        let x3 = point[2].split(',')[0];\r\n        let y3 = point[2].split(',')[1];\r\n        let x4 = point[3].split(',')[0];\r\n        let y4 = point[3].split(',')[1];\r\n\r\n        let leftMin = Math.min(x1, x2, x3, x4);\r\n        //let rightMax = Math.max(x1, x2, x3, x4);\r\n        let topMin = Math.min(y1, y2, y3, y4);\r\n        //let bottomMax = Math.max(y1, y2, y3, y4);\r\n\r\n        let _x1 = x1 - leftMin;\r\n        let _x2 = x2 - leftMin;\r\n        let _x3 = x3 - leftMin;\r\n        let _x4 = x4 - leftMin;\r\n        let _y1 = y1 - topMin;\r\n        let _y2 = y2 - topMin;\r\n        let _y3 = y3 - topMin;\r\n        let _y4 = y4 - topMin;\r\n\r\n\r\n        var canvas = this.canvas.current;\r\n        //console.log(_x1,_y1,_x2,_y2,_x3,_y3,_x4,_y4);\r\n        if(canvas.getContext){\r\n            //debugger;\r\n            let ctx = canvas.getContext(\"2d\");\r\n            ctx.fillStyle = 'rgba(254,180,32,0.5)';\r\n            ctx.clearRect(0,0,canvas.width,canvas.height);\r\n            ctx.beginPath();\r\n            ctx.moveTo(_x1, _y1);\r\n            ctx.lineTo(_x2, _y2);\r\n            ctx.lineTo(_x3, _y3);\r\n            ctx.lineTo(_x4, _y4);\r\n            ctx.fill();\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        let point = this.props.point;\r\n        let x1 = point[0].split(',')[0];\r\n        let y1 = point[0].split(',')[1];\r\n        let x2 = point[1].split(',')[0];\r\n        let y2 = point[1].split(',')[1];\r\n        let x3 = point[2].split(',')[0];\r\n        let y3 = point[2].split(',')[1];\r\n        let x4 = point[3].split(',')[0];\r\n        let y4 = point[3].split(',')[1];\r\n\r\n        let leftMin = Math.min(x1, x2, x3, x4);\r\n        let rightMax = Math.max(x1, x2, x3, x4);\r\n        let topMin = Math.min(y1, y2, y3, y4);\r\n        let bottomMax = Math.max(y1, y2, y3, y4);\r\n        let cvsStyle={\r\n            position:\"absolute\",\r\n            left:leftMin+\"px\",\r\n            top:topMin+\"px\",\r\n            //background:\"#80008021\",\r\n        };\r\n        return(\r\n            <>\r\n            {\r\n                <canvas\r\n                ref={this.canvas}\r\n                width={rightMax-leftMin} height={bottomMax-topMin} style={cvsStyle}>\r\n                </canvas>\r\n            }\r\n            </>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst Dynamsoft = window.Dynamsoft;\r\nlet scanner = null;\r\n\r\n\r\nclass Scanner extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            resultsInfo:[],\r\n            isOpen:false,\r\n            resultsPoint:[],\r\n            camera:0,\r\n            cameraList:0,\r\n            isFullRegion:this.props.isFullRegion,\r\n        })\r\n    }\r\n\r\n\r\n\r\n    showScanner(){\r\n        var regionScale = 1.0*this.props.region/100;\r\n        var regionWidth =  regionScale*window.innerWidth;\r\n        var regionHeight = 0.5*regionScale*window.innerHeight;\r\n\r\n        var updateFrame = ()=>{\r\n            var r =scanner.getResolution();\r\n            var vW = r[0];\r\n            var vH = r[1];\r\n            var left,right,top,bottom;\r\n            if(vW>=window.innerWidth){      //resolution > screen width, mainly mobiles\r\n                left = (window.innerWidth-regionWidth)/2/vW;\r\n                right = (window.innerWidth+regionWidth)/2/vW;\r\n                top = (vH-regionHeight)/2/vH;\r\n                bottom = (vH+regionHeight)/2/vH;\r\n            }\r\n\r\n            else if(vW<window.innerWidth){  //resolution > screen width, mainly pc\r\n                if(regionWidth>=250 || regionHeight>=250){\r\n                    left = (vW-250)/2/vW;\r\n                    right = (vW+250)/2/vW;\r\n                    top = (vH-250)/2/vH;\r\n                    bottom = (vH+250)/2/vH;\r\n                }\r\n                else {\r\n                    left = (vW-regionWidth)/2/vW;\r\n                    right = (vW + regionWidth)/2/vW;\r\n                    top = (vH-regionHeight)/2/vH;\r\n                    bottom = (vH+regionHeight)/2/vH;\r\n                }\r\n\r\n            }\r\n\r\n            let settings = scanner.getRuntimeSettings();\r\n\r\n            if(!this.state.isFullRegion){\r\n                settings.region.left = Math.round(left*100);\r\n                settings.region.right = Math.round(right*100);\r\n                settings.region.top = Math.round(top*100);\r\n                settings.region.bottom = Math.round(bottom*100);\r\n                settings.region.measuredByPercentage = 1; \r\n                scanner.updateRuntimeSettings(settings);\r\n                //console.log(scanner.getRuntimeSettings());\r\n            }\r\n            else{\r\n                settings.region.left = 0;\r\n                settings.region.right = 100;\r\n                settings.region.top = 0;\r\n                settings.region.bottom = 100;\r\n                settings.region.measuredByPercentage = 1; \r\n                scanner.updateRuntimeSettings(settings);\r\n            }\r\n        };\r\n\r\n        Dynamsoft.BarcodeScanner.createInstance({\r\n            intervalTime:200,\r\n            UIElement:document.getElementById('scanner'),\r\n            //videoSettings: { video: { width: { ideal: 1280 }, height: {ideal: 720 }, facingMode: { ideal: 'environment' } } },\r\n            onFrameRead: results => {\r\n                let resultPointsPerFrame=[];\r\n                for (let i = 0; i < results.length; i++){\r\n                    let result = results[i];\r\n                    resultPointsPerFrame.push(result.LocalizationResult.ResultPoints);\r\n                }\r\n\r\n                let resultsInfo = scanner.arrDiffCodeInfo;\r\n                this.setState({\r\n                    resultsInfo:resultsInfo,\r\n                    resultsPoint:resultPointsPerFrame,\r\n                    isFullRegion:this.props.isFullRegion,\r\n                });\r\n\r\n                if(scanner!==null){\r\n                    updateFrame();\r\n                    //console.log(scanner.getRuntimeSettings());\r\n                }\r\n                //console.log(this.state.isFullRegion);\r\n            },\r\n            onUnduplicatedRead: (txt, result) => {\r\n                console.log(result);\r\n                \r\n            }\r\n        }).then(s => {\r\n            scanner = s;\r\n            if(scanner._isOpen===false){\r\n                console.log(\"open!\");\r\n                scanner.open().then((paras)=>{\r\n                    scanner.getAllCameras().then((cameras)=>{\r\n                        this.setState({\r\n                            cameraList:cameras\r\n                        });\r\n                        console.log(this.state.cameraList);\r\n                        scanner.setCurrentCamera(cameras[this.state.camera].deviceId);\r\n                    });\r\n                    //scanner.setCurrentCamera(paras.all[this.state.camera].deviceId);\r\n                    updateFrame();\r\n                });\r\n            }\r\n            else{\r\n                console.log(\"close!\");\r\n                scanner.show().then(()=>scanner.close());\r\n            }\r\n        }).then(()=>{\r\n            this.setState({\r\n                isOpen:!this.state.isOpen\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.showScanner();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.showScanner();\r\n    }\r\n\r\n    handleFullRegion(){\r\n        this.setState({\r\n            isFullRegion:this.state.isFullRegion,\r\n        })\r\n    }\r\n   \r\n    onSwitchCamera(){\r\n        scanner.getAllCameras().then(infos=>{\r\n            var numOfCamera = this.state.cameraList.length;\r\n            this.setState({\r\n                camera:this.state.camera===numOfCamera-1?0:this.state.camera+1\r\n            });\r\n            return infos;\r\n        }).then((infos)=>{\r\n            var config={};\r\n            config.content=\"Switch to camera \"+infos[this.state.camera].label+\" successfully!\";\r\n            config.icon=<Icon type=\"smile\" style={{color:\"#FE8E14\"}}></Icon>;\r\n            message.config({\r\n                top:window.innerHeight-180,\r\n                duration:1.5,\r\n            });\r\n            message.open(config);\r\n            scanner.setCurrentCamera(infos[this.state.camera].deviceId);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const allCanvas = this.state.resultsPoint.map((eachResult,index)=>\r\n            <Canvas key={index} point={eachResult}></Canvas>\r\n        );\r\n        return(\r\n            <>\r\n            <style type=\"text/css\">\r\n                {`\r\n                .waiting{\r\n                    position:absolute;\r\n                    left:50%;\r\n                    top:50%;\r\n                    transform:translate(-50%);\r\n                    color:#FE8E14;\r\n                    transition: opacity 1000ms ease-in;\r\n                }\r\n\r\n                .fade-enter.fade-enter-active {\r\n                    opacity:1;\r\n                    transition: opacity 1000ms ease-in;\r\n                }\r\n\r\n                .fade-enter{\r\n                    opacity:0;\r\n                }\r\n\r\n                .fade-leave{\r\n                    opacity: 1; \r\n                }\r\n\r\n                .fade-leave.fade-leave-active{\r\n                    opacity:0;\r\n                    transition: opacity 3000ms ease-in;\r\n                }\r\n                \r\n                .fade-appear{\r\n                    opacity:0;\r\n                }\r\n\r\n                .fade-appear.fade-appear-active {\r\n                    opacity: 1;\r\n                    transition: opacity 2000ms ease-in;\r\n                }\r\n                `}\r\n            </style>\r\n            <ReactCSSTransitionGroup\r\n                transitionName=\"fade\"\r\n                transitionLeave={true}\r\n                transitionAppear={false}\r\n                transitionEnter={false}\r\n                transitionAppearTimeout={500}\r\n                transitionLeaveTimeout={3500}\r\n                transitionEnterTimeout={2500}\r\n            >\r\n                {\r\n                    !this.state.isOpen&&\r\n                    <Spin \r\n                    className=\"waiting\" \r\n                    tip=\"Accessing Camera list...\" \r\n                    indicator={<Icon type=\"smile\" spin style={{ fontSize: \"3rem\" ,}}></Icon>}>\r\n                    </Spin>    \r\n                }\r\n            </ReactCSSTransitionGroup>           \r\n            \r\n            <div id='scanner' style={{position:\"absolute\",width:\"100%\"}}>\r\n                <div className=\"video-container\">\r\n                    <video className='dbrScanner-video custom-video' playsInline={true}></video>\r\n                {/*{*/}\r\n                    {/*this.state.resultsPoint.length&&*/}\r\n                    {/*<>{allCanvas}</>*/}\r\n                {/*}*/}\r\n                <>{allCanvas}</>\r\n                </div>\r\n\r\n            </div>\r\n            <Result resultsInfo={this.state.resultsInfo}></Result>\r\n            <button onClick={this.onSwitchCamera.bind(this)} style={{position:\"absolute\",top:\"60px\",left:0}}>切换相机</button>\r\n            {/* <div style={{\"position\":\"absolute\",bottom:\"130px\"}}>\r\n                <Button type=\"primary\" onClick={this.showScanner.bind(this)}>{this.state.isOpen?\"close\":\"open\"} scanner</Button>\r\n            </div> */}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Scanner;\r\n","import React from 'react';\r\nimport \"./Layout.css\";\r\nimport {Icon,message} from 'antd';\r\nimport SettingPage from './SettingPage';\r\nimport FilePage from './FilePage';\r\nimport Scanner from \"./Scanner\";\r\n\r\nfunction RegionBtn(props){\r\n    return(\r\n        <label className=\"region\" onClick={props.handleRegion}>\r\n            <Icon type={props.isFullRegion?\"fullscreen-exit\":\"fullscreen\"} style={{fontSize:\"2rem\",color:\"#FE8E14\"}}></Icon>\r\n        </label>\r\n    )\r\n}\r\n\r\nfunction ScannerArea(props){\r\n    return(\r\n        <div className=\"scanner-container\">\r\n            <div className=\"frame\" style={{width:props.region+\"%\",height:props.region+\"%\",maxWidth:\"250px\",maxHeight:\"250px\"}}>\r\n                <label className=\"flashlight\">\r\n                    <Icon type=\"funnel-plot\" style={{fontSize:\"2rem\",color:\"#FE8E14\"}}></Icon>\r\n                </label>\r\n            </div>\r\n            <div className=\"tip-info\">\r\n                <p>Put the code in the box and scan it automatically.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n// class Body extends React.Component{\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state=({\r\n//             isFullRegion:false,\r\n//         })\r\n//     }\r\n\r\n//     handleRegion(){\r\n//         this.setState({\r\n//             isFullRegion:!this.state.isFullRegion,\r\n//         })\r\n//     }\r\n\r\n\r\n//     render(){\r\n//         var regionSize = 60;\r\n//         return (\r\n//             <div className=\"home-screen\">\r\n//                 <Scanner region={regionSize} isFullRegion={this.state.isFullRegion}></Scanner>\r\n//                 {\r\n//                     !this.state.isFullRegion&&\r\n//                     <ScannerArea region={regionSize}></ScannerArea>\r\n//                 }\r\n//                 <div className=\"dynam-info\">\r\n//                     {/* <p>Dynamsoft DBR</p> */}\r\n//                     <a href=\"https://www.dynamsoft.com\" ><img src=\"img/logo-dynamsoft-blackBg-190x47.png\" alt=\"logo\"></img></a>\r\n//                 </div>\r\n                \r\n//                 <RegionBtn handleRegion={this.handleRegion.bind(this)} isFullRegion={this.state.isFullRegion}></RegionBtn>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\nlet clicks = [];\r\nlet timeout;\r\n\r\nclass Main extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            isShowSettingPage:false,\r\n            isShowFilePage:false,\r\n            isFullScreen:false,\r\n            isFullRegion:false,\r\n        })\r\n    }\r\n\r\n    handleRegion(){\r\n        this.setState({\r\n            isFullRegion:!this.state.isFullRegion,\r\n        })\r\n    }\r\n\r\n    handleShowSettingPage(){\r\n        this.setState({\r\n            isShowSettingPage:!this.state.isShowSettingPage,\r\n        });\r\n    }\r\n\r\n    handleShowFilePage(){\r\n        this.setState({\r\n            isShowFilePage:!this.state.isShowFilePage,\r\n        });\r\n    }\r\n\r\n    switchFullScreen(){\r\n        if(!this.state.isFullScreen){\r\n            if(document.documentElement.requestFullscreen){\r\n                document.documentElement.requestFullscreen();\r\n            }\r\n            else if(document.documentElement.webkitRequestFullScreen){\r\n                document.documentElement.webkitRequestFullScreen();\r\n            }\r\n            else if(document.documentElement.mozRequestFullScreen){\r\n                document.documentElement.mozRequestFullScreen();\r\n            }\r\n            else{\r\n                document.documentElement.msRequestFullscreen();\r\n            }\r\n            //document.documentElement.requestFullscreen(); \r\n        }\r\n            \r\n        else\r\n            document.exitFullscreen();\r\n        this.setState({\r\n            isFullScreen:!this.state.isFullScreen,\r\n        })       \r\n    }\r\n\r\n    fullSceenClickHandler(event){\r\n        event.preventDefault();\r\n        clicks.push(new Date().getTime());\r\n        window.clearTimeout(timeout);\r\n        timeout = window.setTimeout(()=>{\r\n            if (clicks.length > 1 && clicks[clicks.length - 1] - clicks[clicks.length - 2] < 250){\r\n                this.switchFullScreen();\r\n            }\r\n        },250);\r\n    }   \r\n\r\n    render(){\r\n        var regionSize = 60;\r\n        var home = (\r\n            <div className=\"home-screen\">\r\n                <Scanner region={regionSize} isFullRegion={this.state.isFullRegion}></Scanner>\r\n                {\r\n                    !this.state.isFullRegion&&\r\n                    <ScannerArea region={regionSize}></ScannerArea>\r\n                }\r\n                <div className=\"dynam-info\">\r\n                    {/* <p>Dynamsoft DBR</p> */}\r\n                    <a href=\"https://www.dynamsoft.com\" ><img src=\"img/logo-dynamsoft-blackBg-190x47.png\" alt=\"logo\"></img></a>\r\n                </div>\r\n                <RegionBtn handleRegion={this.handleRegion.bind(this)} isFullRegion={this.state.isFullRegion}></RegionBtn>\r\n            </div>\r\n        );\r\n\r\n        if(this.state.isShowSettingPage){\r\n            return(\r\n                <>\r\n                 {home}\r\n                <SettingPage\r\n                onBackClick={this.handleShowSettingPage.bind(this)}\r\n                >\r\n                </SettingPage>\r\n                </>\r\n            )\r\n        }\r\n\r\n        if(this.state.isShowFilePage){\r\n            return(\r\n                <>\r\n                {home}\r\n                <FilePage onBackClick={this.handleShowFilePage.bind(this)}></FilePage>\r\n                </>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <>\r\n                {home}\r\n                <div className=\"header-bar\">\r\n                    <div className=\"settingBtn-container\" >\r\n                        {/*<Icon type=\"setting\" style={{fontSize:\"2.5rem\",color:\"#FE8E14\"}} onClick={this.handleShowSettingPage.bind(this)} ></Icon>*/}\r\n                    </div>\r\n                    <div className=\"double-click\" >\r\n                        <label onClick={this.fullSceenClickHandler.bind(this)}>双击{this.state.isFullScreen&&\"退出\"}全屏</label>\r\n                    </div>\r\n                    <div className=\"selImgBtn-container\">\r\n                        {/*<Icon type=\"plus\" style={{fontSize:\"2.5rem\",color:\"#FE8E14\"}} onClick={this.handleShowFilePage.bind(this)}></Icon>*/}\r\n                    </div>\r\n                </div>\r\n\r\n                </>\r\n            )\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n\r\nclass EachResult extends React.Component{\r\n    copyScannerResult(){\r\n        const kUtil=window.kUtil;\r\n        kUtil.copyToClipBoard(this.props.content);\r\n        // message.config({\r\n        //     top:window.innerHeight-180,\r\n        //     maxCount:3,\r\n        //     \r\n        // })\r\n        //message.success(\"copy successfully!\");\r\n        var config={};\r\n        config.content=\"copy successfully!\";\r\n        config.icon=<Icon type=\"smile\" style={{color:\"#FE8E14\"}}></Icon>;\r\n        message.config({\r\n            top:window.innerHeight-180,\r\n            duration:1.5,\r\n        });\r\n        message.open(config);\r\n    }\r\n\r\n    render(){\r\n        let txt = this.props.content;\r\n        let possibleLink = txt;\r\n        if (!txt.startsWith('http') && (txt.startsWith('www') || -1 !== txt.indexOf('.com') ||\r\n            -1 !== txt.indexOf('.net') || -1 !== txt.indexOf('.org') || -1 !== txt.indexOf('.edu'))) {\r\n            possibleLink = 'http://' + txt;\r\n        }\r\n        let isLink = possibleLink.startsWith('http');\r\n        return(\r\n            <div className=\"result-content\">\r\n                <>\r\n                    <><span style={{color:\"#FE8E14\"}}>{this.props.format}: </span></>\r\n                    {\r\n                        isLink?\r\n                        <a href={possibleLink} target={\"_blank\"} style={{textDecoration:\"underline\"}} >{this.props.content}</a>\r\n                        : <span onClick={this.copyScannerResult.bind(this)}>{this.props.content}</span>\r\n                    }\r\n                    <><span style={{color:\"#FE8E14\"}}> x {this.props.count}</span></>\r\n                    {/* <Button type=\"link\" icon=\"copy\" size=\"small\" style={{float:\"right\"}}  onClick={this.copyScannerResult.bind(this)}></Button> */}\r\n                </>\r\n            </div>\r\n            )\r\n        }\r\n}\r\n\r\n\r\nclass Result extends React.Component{\r\n    render(){\r\n        const resultItems = this.props.resultsInfo.slice(-3).map((ri,index)=>\r\n            <EachResult key={index} content = {ri.result.BarcodeText} count={ri.count} format={ri.result.BarcodeFormatString}></EachResult>\r\n        );\r\n        return(\r\n            <div className=\"result-container\">\r\n                {resultItems}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Layout extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            isOpen:false,\r\n            isShow:true,\r\n        })\r\n    }\r\n\r\n    handleShow(){\r\n        this.setState({\r\n            isShow:!this.state.isShow,\r\n        });\r\n        console.log(this.state.isShow);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"wrap-container\">\r\n                {\r\n                    this.state.isShow&&<><Main></Main></>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;\r\nexport {Result};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Layout from './Layout'\nimport * as serviceWorker from './serviceWorker';\n\n\n// class FullPage extends React.Component{\n//     constructor(props){\n//         super(props);\n//         this.state=({\n            \n//         })\n//     }\n\n//     render(){\n//         return(\n//             <>\n//                 <Layout></Layout>\n//             </>\n//         )\n//     }\n// }\n\nReactDOM.render(<Layout/>,document.getElementById('root'));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}