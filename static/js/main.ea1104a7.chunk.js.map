{"version":3,"sources":["SettingPage.js","FilePage.js","Scanner.js","Layout.js","serviceWorker.js","index.js"],"names":["SubMenu","Menu","CutOff","react_default","a","createElement","divider","style","margin","Dynamsoft","_1D","_PDF417","_QRCODE","_DataMatrix","_AztecCODE","reader","AttributeStyle","padding","settingsFromPage","resolution","barcodeformat","localization","deblurlevel","VideoResolution","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSelectChange","e","setState","value","target","res","state","console","log","menu","mode","key","title","icon","type","es_radio","Group","paddingLeft","onChange","bind","defaultValue","React","Component","defaultCheckList","BarcodeFormat","_this2","checkedList","onSelectFormat","format","indexOf","formatIDs","window","EnumBarcodeFormat","OneD","PDF417","QR_CODE","DATAMATRIX","AZTEC","es_checkbox","row","col","span","ScanSettings","_this3","About","_this5","card","ClearCache","config","message","top","innerHeight","duration","indexedDB","request","deleteDatabase","onsuccess","onerror","error","content","color","open","ex","className","es_button","size","onClick","handleClear","backgroundColor","border","SettingPage","_this6","showMenu","selectedTags","nextProps","nextState","Fragment","page_header","onBack","onBackClick","theme","SettingPage_VideoResolution","SettingPage_BarcodeFormat","SettingPage_ScanSettings","SettingPage_About","SettingPage_ClearCache","FilePage","handleChange","info","file","status","img","callback","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","imageUrl","loading","isloadingNewFile","decodeFile","copyScannerResult","kUtil","copyToClipBoard","innerText","showFile","resultsInfo","barcodeFormat","deblurLevel","BarcodeReader","createInstance","then","r","undefined","destroy","settings","getRuntimeSettings","test","barcodeFormatIds","localizationModes","updateRuntimeSettings","decode","results","length","txts","i","push","BarcodeText","catch","uploadButton","list","dataSource","bordered","renderItem","Item","display","typography","Text","BarcodeFormatString","possibleLink","startsWith","fontSize","href","textDecoration","onSelectNewFile","upload","name","listType","showUploadList","action","supportServerRender","width","height","src","alt","EachResult","txt","isLink","count","Result","resultItems","slice","map","ri","index","Scanner_EachResult","Canvas","isDraw","canvas","createRef","point","x1","split","y1","x2","y2","x3","y3","x4","y4","leftMin","Math","min","topMin","_x1","_x2","_x3","_x4","_y1","_y2","_y3","_y4","current","getContext","ctx","fillStyle","clearRect","beginPath","moveTo","lineTo","fill","rightMax","max","bottomMax","cvsStyle","position","left","ref","scanner","Scanner","isOpen","resultsPoint","camera","cameraList","isFullRegion","cameraOptions","_this4","updateFrame","right","bottom","regionScale","region","regionWidth","innerWidth","regionHeight","getResolution","vW","vH","measuredByPercentage","round","BarcodeScanner","intervalTime","UIElement","document","getElementById","videoSettings","video","ideal","facingMode","onFrameRead","resultPointsPerFrame","LocalizationResult","ResultPoints","arrDiffCodeInfo","onUnduplicatedRead","s","updateVideoSettings","show","paras","getAllCameras","cameras","cameraOption","es_select","Option","deviceId","label","showScanner","close","infos","setCurrentCamera","allCanvas","eachResult","Scanner_Canvas","react_addons_css_transition_group_default","transitionName","transitionLeave","transitionAppear","transitionEnter","transitionAppearTimeout","transitionLeaveTimeout","transitionEnterTimeout","spin","tip","indicator","id","playsInline","Scanner_Result","onSwitchCamera","maxWidth","opacity","suffixIcon","defaultActiveFirstOption","RegionBtn","handleRegion","ScannerArea","maxHeight","Main","isShowSettingPage","isShowFilePage","isFullScreen","settingDisplayStyle","fileDisplayStyle","exitFullscreen","documentElement","requestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","event","switchFullScreen","home","src_Scanner","extra","handleShowSettingPage","fullSceenClickHandler","handleShowFilePage","src_SettingPage_0","src_FilePage_0","Layout","isShow","Layout_Main","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_Layout_0","process","URL","origin","concat","fetch","response","contentType","headers","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ea1104a7.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css'\r\nimport { PageHeader,Menu, Icon, Button,Radio, Card,Switch,Divider,Checkbox,Row,Col,message } from 'antd';\r\nimport './SettingPage.css';\r\nimport './Layout.css';\r\n\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nfunction CutOff(){\r\n    return(\r\n        <Divider style={{margin:\"10px 0\"}}/>\r\n    )\r\n}\r\n\r\nconst AttributeStyle = {\r\n    padding:\"5px\"\r\n};\r\n\r\n\r\nlet settingsFromPage = {\r\n    resolution:[1280,720],\r\n    barcodeformat:503318527,\r\n    localization:[2,0,0,0,0,0,0,0],\r\n    deblurlevel : 0,\r\n};\r\n\r\n\r\n\r\n\r\nclass VideoResolution extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            value:0,\r\n            resolution:[1280,720]\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        settingsFromPage.resolution=this.state.resolution;\r\n        console.log(this.state.resolution);\r\n    }\r\n\r\n    onSelectChange = e =>{\r\n        this.setState({\r\n            value:e.target.value,\r\n            resolution:e.target.res,\r\n        });\r\n    };\r\n\r\n\r\n    render(){\r\n        return(\r\n        <Menu\r\n        mode=\"inline\"\r\n        >\r\n            <SubMenu\r\n                key=\"resolution\"\r\n                title={\r\n                <span>\r\n                    <Icon type=\"eye\"/>\r\n                    <span>Video Resolution</span>\r\n                </span>\r\n                }\r\n            >\r\n                <Radio.Group style={{paddingLeft:'20px'}} onChange={this.onSelectChange.bind(this)} defaultValue=\"1280,720\">\r\n                    <Radio style={AttributeStyle} value={\"3840,2160\"} res={[3840,2160]}>3840*2160</Radio>\r\n                    <Radio style={AttributeStyle} value={\"2560,1440\"} res={[2560,1440]}>2560*1440</Radio>\r\n                    <Radio style={AttributeStyle} value={\"1920,1080\"} res={[1920,1080]}>1920*1080</Radio>\r\n                    <Radio style={AttributeStyle} value={\"1600,1200\"} res={[1600,1200]}>1600*1200</Radio>\r\n                    <Radio style={AttributeStyle} value={\"1280,720\"} res={[1280,720]}>1280*720</Radio>\r\n                    <Radio style={AttributeStyle} value={\"800,600\"} res={[800,600]}>800*600</Radio>\r\n                    <Radio style={AttributeStyle} value={\"640,480\"} res={[640,480]}>640*480</Radio>\r\n                    <Radio style={AttributeStyle} value={\"640,360\"} res={[640,360]}>640*360</Radio>\r\n                </Radio.Group>\r\n            </SubMenu>      \r\n        </Menu>   \r\n        )\r\n    }   \r\n}\r\n\r\n\r\n// const options=['1D','PDF417','QR Code','Data Matrix','Aztec Code'];\r\nvar Dynamsoft;\r\nconst defaultCheckList = ['1D','PDF417','QR Code','Data Matrix','Aztec Code'];\r\nvar _1D ;\r\nvar _PDF417;\r\nvar _QRCODE;\r\nvar _DataMatrix;\r\nvar _AztecCODE;\r\nclass BarcodeFormat extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            checkedList:defaultCheckList,\r\n        }\r\n    }\r\n\r\n    onChange = checkedList=>{\r\n        this.setState({\r\n            checkedList,\r\n        })\r\n    }\r\n\r\n    onSelectFormat = e=>{\r\n        console.log(e.target.format,e.target.value,this.state.checkedList.indexOf(e.target.value)!==-1);\r\n        this.setState({\r\n            formatIDs:this.state.checkedList.indexOf(e.target.value)!==-1?(this.state.formatIDs-e.target.format):(this.state.formatIDs+e.target.format)\r\n            //formatIDs:this.state.formatIDs\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        Dynamsoft = window.Dynamsoft;\r\n        _1D = Dynamsoft.EnumBarcodeFormat.OneD;\r\n        _PDF417 = Dynamsoft.EnumBarcodeFormat.PDF417;\r\n        _QRCODE = Dynamsoft.EnumBarcodeFormat.QR_CODE;\r\n        _DataMatrix = Dynamsoft.EnumBarcodeFormat.DATAMATRIX;\r\n        _AztecCODE = Dynamsoft.EnumBarcodeFormat.AZTEC;\r\n        this.setState({\r\n            formatIDs:_1D+_PDF417+_QRCODE+_DataMatrix+_AztecCODE,\r\n        }) \r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log(this.state.checkedList,this.state.formatIDs);\r\n        settingsFromPage.barcodeformat = this.state.formatIDs;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Menu mode=\"inline\">\r\n                <SubMenu \r\n                    key=\"format\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"barcode\"/>\r\n                            <span>Barcode Format</span>\r\n                        </span>    \r\n                    }\r\n                >\r\n                    <div style={{ padding:\"0 0 5px 25px\" }}>\r\n                        <Checkbox.Group\r\n                        /*options={options}*/\r\n                        value={this.state.checkedList}\r\n                        onChange={this.onChange.bind(this)}>\r\n                            <Row>\r\n                                <Col span={12}>\r\n                                    <Checkbox value=\"1D\" format={_1D} onChange={this.onSelectFormat.bind(this)} >1D</Checkbox>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Checkbox value=\"PDF417\" format={_PDF417} onChange={this.onSelectFormat.bind(this)}>PDF417</Checkbox>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Checkbox value=\"QR Code\" format={_QRCODE} onChange={this.onSelectFormat.bind(this)}>QR Code</Checkbox>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Checkbox value=\"Data Matrix\" format={_DataMatrix} onChange={this.onSelectFormat.bind(this)}>Data Matrix</Checkbox>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Checkbox value=\"Aztec Code\" format={_AztecCODE} onChange={this.onSelectFormat.bind(this)}>Aztec Code</Checkbox>\r\n                                </Col>\r\n                            </Row>\r\n                        </Checkbox.Group>\r\n                    </div>\r\n                    \r\n                   {/*  <Menu.Item key=\"1D\" style={{left:\"5px\"}}><h5>1D</h5></Menu.Item>\r\n                    <Menu.Item key=\"PDF417\" style={{left:\"5px\"}}><h5>PDF417</h5></Menu.Item>\r\n                    <Menu.Item key=\"QR Code\" style={{left:\"5px\"}}><h5>QR Code</h5></Menu.Item>\r\n                    <Menu.Item key=\"Data Matrix\" style={{left:\"5px\"}}><h5>Data Matrix</h5></Menu.Item>\r\n                    <Menu.Item key=\"Actec Code\" style={{left:\"5px\"}}><h5>Actec Code</h5></Menu.Item>*/}\r\n                </SubMenu>    \r\n                \r\n            </Menu>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass ScanSettings extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            value:\"fast\",\r\n        }\r\n    }\r\n\r\n\r\n    onSelectChange = e =>{\r\n        this.setState({\r\n            value:e.target.value,\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(){\r\n        console.log(this.state.value);\r\n        settingsFromPage.localization=(this.state.value===\"fast\")?[2,0,0,0,0,0,0,0]:[2,16,4,8,0,0,0,0];\r\n        settingsFromPage.deblurlevel = 0;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Menu mode=\"inline\">\r\n               <SubMenu\r\n                    key=\"scan\"\r\n                    title={\r\n                    <span>\r\n                        <Icon type=\"setting\"></Icon>\r\n                        <span>Scan Settings</span>\r\n                    </span>\r\n                    }\r\n                >\r\n                    <Radio.Group style={{paddingLeft:'20px'}} onChange={this.onSelectChange.bind(this)} defaultValue='fast'>\r\n                        <Radio style={AttributeStyle} value=\"fast\">Fast</Radio>\r\n                        <Radio style={AttributeStyle} value=\"accurate\">Most Accurate</Radio>\r\n                    </Radio.Group>\r\n                    \r\n                </SubMenu> \r\n            </Menu>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nclass ReadFullRegion extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            value:0\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Menu mode=\"inline\">\r\n                <SubMenu \r\n                    key=\"region\" \r\n                    title={\r\n                    <span>\r\n                        <Icon type=\"eye\"></Icon>\r\n                        <span>Read Full Region</span>\r\n                    </span>\r\n                    }\r\n                >\r\n                    <div>\r\n                        <Switch onChange={this.onChangeRegionMode} \r\n                            style={{float:\"right\",right:\"10px\"}}/> \r\n                    </div>\r\n                </SubMenu>   \r\n            </Menu>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass About extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            value:0\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Menu mode=\"inline\">\r\n                <SubMenu\r\n                    key=\"about\"\r\n                    title={\r\n                    <span>\r\n                        <Icon type=\"bulb\"></Icon>\r\n                        <span>About Dynamsoft</span>\r\n                    </span>\r\n                    }\r\n                >\r\n                    <div>\r\n                        <Card title=\"About\">\r\n                            <p>\r\n                            Founded in Sep 2003 with the aim of being the dynamic center of software developers, \r\n                            Dynamsoft provides enterprise-class document capture and image processing software development kits (SDK),\r\n                            with numerous generations for each product. Today many Fortune 500 Companies including HP, IBM, Intel, and Siemens trust Dynamsoft solutions.\r\n                            </p>\r\n                        </Card>\r\n                    </div>\r\n                </SubMenu>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass ClearCache extends React.Component{\r\n    \r\n    handleClear(){\r\n        var config={};\r\n        message.config({\r\n            top:window.innerHeight/2,\r\n            duration:2,\r\n        });\r\n        try{\r\n            console.log(window.indexedDB);\r\n            var request = window.indexedDB.deleteDatabase('dynamsoft');\r\n            request.onsuccess = request.onerror = ()=>{\r\n                if(request.error){\r\n                    // alert('Clear failed: '+(request.error.message || request.error));\r\n                    config.content='Clear failed: '+(request.error.message || request.error);\r\n                    config.icon=<Icon type=\"close\" style={{color:\"red\"}}></Icon>;\r\n                    message.open(config);\r\n                }else{\r\n                    // alert('Clear success!');\r\n                    config.content=\"Clear success!\";\r\n                    config.icon=<Icon type=\"check-circle\" style={{color:\"#FE8E14\"}}></Icon>;\r\n                    message.open(config);\r\n                }\r\n            };\r\n        }catch(ex){\r\n            //alert(ex.message || ex);\r\n            config.content=ex.message || ex;\r\n            config.icon=<Icon type=\"close\" style={{color:\"red\"}}></Icon>;\r\n            message.open(config);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"clear-cache\">\r\n                <Button type=\"primary\"\r\n                 size=\"large\" \r\n                 onClick={this.handleClear.bind(this)}\r\n                 style={{backgroundColor:\"rgb(254, 142, 20)\",border:\"1px solid rgb(254, 142, 20)\"}}\r\n                >\r\n                    Clear Cache\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass SettingPage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            showMenu:true,\r\n            //content:null,\r\n            //resolutonValue: 1,\r\n            //scanValue:0,\r\n            selectedTags: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    shouldComponentUpdate(nextProps,nextState){\r\n        return false;\r\n    }\r\n\r\n    \r\n    render(){\r\n        return(\r\n            <>\r\n                {/* hide the setting button if the  setting page is shown */}\r\n                {/* <div>\r\n                    {\r\n                        !this.state.showMenu && \r\n                        <div className=\"settingBtn-container\">\r\n                            <Icon onClick={this.onSettingClick.bind(this)}  type=\"setting\" style={{fontSize:\"50px\",color:\"wheat\"}}></Icon>\r\n                        </div>\r\n                    }\r\n                </div> */}\r\n                \r\n                {/* show the setting page */}\r\n                \r\n                {\r\n                    //!this.state.showMenu ? null:\r\n                    <div className=\"setting-container\">\r\n                        {/* <Link href=\"/\"> */}\r\n                            <div>\r\n                            <PageHeader onBack={this.props.onBackClick/*()=>null*/} title=\"Settings\"  />\r\n                            </div>\r\n                        {/* </Link> */}\r\n                        <Menu\r\n                            //defaultSelectedKeys={['video']}\r\n                            //defaultOpenKeys={['Read Full Region']}\r\n                            mode=\"inline\"\r\n                            theme=\"light\"\r\n                            \r\n                        >\r\n                            {/* Video Source */}\r\n                            {/* <VideoSource></VideoSource>*/}\r\n                            {/* <CutOff /> */}\r\n\r\n                            {/* Video Resolution */}\r\n                            <VideoResolution></VideoResolution>\r\n\r\n                            <CutOff />\r\n\r\n                            {/* //Barcode Format */}\r\n                            <BarcodeFormat></BarcodeFormat>\r\n                            \r\n                            <CutOff />\r\n\r\n                            {/* //Scan Settings */}\r\n                            <ScanSettings></ScanSettings>\r\n\r\n                            <CutOff />\r\n\r\n                            {/* //Read Full Region */}\r\n                            {/* <ReadFullRegion></ReadFullRegion> */}\r\n                            {/* <CutOff /> */}\r\n\r\n                            {/* About */}\r\n                            <About></About>\r\n                            \r\n                            <CutOff />\r\n                            {/* Clear Cache */}\r\n                            <ClearCache></ClearCache>\r\n                        </Menu>\r\n                    </div>\r\n                }\r\n                \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n//将state数据注入到SettingPage组件中：\r\n//export default connect(mapStateToProps)(SettingPage);\r\nexport default SettingPage;\r\nexport {settingsFromPage};","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { PageHeader,Upload,Icon,message,List,Typography} from 'antd';\r\nimport './FilePage.css';\r\nimport './Layout.css';\r\nimport {settingsFromPage} from './SettingPage';\r\n\r\n\r\nfunction getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n}\r\n  \r\nfunction beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n        message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n        message.error('Image must smaller than 2MB!');\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n}\r\n\r\nfunction isLink(possibleLink){\r\n    if (!possibleLink.startsWith('http') && (possibleLink.startsWith('www') || -1 !== possibleLink.indexOf('.com') ||\r\n        -1 !== possibleLink.indexOf('.net') || -1 !== possibleLink.indexOf('.org') || -1 !== possibleLink.indexOf('.edu'))) {\r\n        return true;\r\n    }\r\n    else{\r\n        return false;\r\n    }\r\n}\r\n\r\nvar Dynamsoft;\r\nvar reader;\r\n\r\nclass FilePage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            showFile:true,\r\n            loading: false,\r\n            resultsInfo:\"\",\r\n            barcodeFormat:settingsFromPage.barcodeformat,\r\n            localization:settingsFromPage.localization,\r\n            deblurLevel:settingsFromPage.deblurlevel,\r\n            isloadingNewFile:false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        Dynamsoft = window.Dynamsoft;\r\n        Dynamsoft.BarcodeReader.createInstance().then(r=>{\r\n            reader=r;\r\n        })\r\n        console.log(this.state.barcodeFormat);\r\n    }\r\n    \r\n    componentWillUnmount(){\r\n        reader!==undefined&&reader.destroy();\r\n    }\r\n\r\n    handleChange = info => {\r\n        // console.log(info.file.originFileObj);\r\n        if (info.file.status === 'uploading') {\r\n            this.setState({ loading: true ,file:info.file.originFileObj});\r\n            return;\r\n        }\r\n        if (info.file.status === 'done') {\r\n        // Get this url from response in real world.\r\n        getBase64(info.file.originFileObj, imageUrl =>\r\n            this.setState({\r\n            imageUrl,\r\n            loading: false,\r\n            isloadingNewFile:true,\r\n            }),\r\n        );\r\n        this.decodeFile(info.file.originFileObj);\r\n        }\r\n    };\r\n\r\n    onSelectNewFile(){\r\n        this.setState({\r\n            isloadingNewFile:false,\r\n        })\r\n        console.log(\"this\");\r\n    }\r\n\r\n    decodeFile(file){\r\n        var config={};\r\n        message.config({\r\n            top:window.innerHeight/2,\r\n            duration:2,\r\n        });\r\n        \r\n        var settings= reader.getRuntimeSettings();\r\n        settings.test=\"tst\";\r\n        settings.barcodeFormatIds=this.state.barcodeFormat;\r\n        settings.localizationModes=this.state.localization;\r\n        settings.deblurLevel = this.state.deblurLevel;\r\n        console.log(settings);\r\n        \r\n        reader.updateRuntimeSettings(settings).then(()=>{\r\n            console.log(reader.getRuntimeSettings());\r\n            reader.decode(file).then((results)=>{\r\n                if (results.length > 0) {\r\n                    console.log(results);\r\n                    var txts = [];\r\n                    for (var i = 0; i < results.length; ++i) {\r\n                        txts.push(results[i].BarcodeText);\r\n                    }\r\n                    this.setState({\r\n                        resultsInfo:results\r\n                    })\r\n        \r\n                    config.content=\"Found \"+results.length+\" barcode!\";\r\n                    config.icon=<Icon type=\"check\" style={{color:\"#FE8E14\"}}></Icon>;\r\n                    message.open(config);\r\n                }\r\n                else\r\n                {\r\n                    config.content=\"No barcode found!\";\r\n                    config.icon=<Icon type=\"close\" style={{color:\"#FE8E14\"}}></Icon>;\r\n                    message.open(config);\r\n                    this.setState({\r\n                        resultsInfo:\"\"\r\n                    })\r\n                }\r\n            }).catch(e=>{\r\n                config.content=\"Not supported image file!\"\r\n                config.icon=<Icon type=\"frown\" style={{color:\"#FE8E14\"}}></Icon>;\r\n                message.open(config);\r\n                console.log(e);\r\n            })    \r\n        })\r\n            \r\n        \r\n    }\r\n\r\n    copyScannerResult=e=>{\r\n        const kUtil=window.kUtil;\r\n        kUtil.copyToClipBoard(e.target.innerText);\r\n        //console.log(e.target.innerText);\r\n        var config={};\r\n        config.content=\"copy successfully!\";\r\n        config.icon=<Icon type=\"smile\" style={{color:\"#FE8E14\"}}></Icon>;\r\n        message.config({\r\n            top:window.innerHeight-180,\r\n            duration:1.5,\r\n        });\r\n        message.open(config);\r\n    }\r\n\r\n\r\n    render(){\r\n        const uploadButton = (\r\n            <div className=\"custom-upload-box\">\r\n                <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n                <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n        );\r\n        const { imageUrl } = this.state;\r\n\r\n        return(\r\n            <>\r\n                \r\n                {/* show the file page */}\r\n                \r\n\r\n                <div className=\"file-container\">\r\n                    <PageHeader onBack={this.props.onBackClick} title=\"Files\"  />\r\n                </div>\r\n\r\n\r\n                {\r\n                    (this.state.resultsInfo.length)&&\r\n                    <div>\r\n                        <List\r\n                        // header={<div>Scanning Result</div>}\r\n                        className=\"decodefile-result-list\"\r\n                        dataSource = {this.state.resultsInfo}\r\n                        bordered\r\n                        size=\"small\"\r\n                        renderItem={Item=>(\r\n                            <List.Item style={{display:\"list-item\"}}>\r\n                                <Typography.Text>\r\n                                    <span style={{color:\"#FE8E14\"}}>{[Item.BarcodeFormatString]}: </span>\r\n                                </Typography.Text>\r\n                                {isLink(Item.BarcodeText)?\r\n                                <a href={'http://'+Item.BarcodeText} target={\"_blank\"} style={{textDecoration:\"underline\"}} >{Item.BarcodeText}</a>\r\n                                :<span onClick={this.copyScannerResult} style={{fontSize:16}}>{Item.BarcodeText}</span>  }\r\n                            </List.Item>\r\n                        )}\r\n                        >\r\n                        </List>\r\n                    </div>\r\n                }   \r\n\r\n\r\n                <div className=\"upload-container\">\r\n                    <div className=\"upload\" onClick={this.onSelectNewFile.bind(this)}>\r\n                        <Upload\r\n                            name=\"avatar\"\r\n                            listType=\"picture-card\"\r\n                            showUploadList={false}\r\n                            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                            // action=\"/upload\"\r\n                            //beforeUpload={beforeUpload}\r\n                            onChange={this.handleChange}\r\n                            supportServerRender={true}\r\n                            style={{width:180,height:180,display:\"table\"}}\r\n                        >\r\n                            {this.state.isloadingNewFile&&imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                        </Upload>    \r\n                    </div>\r\n                </div>\r\n\r\n            </>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default FilePage;","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {Icon,Spin,message,Select} from 'antd';\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\nimport './Layout.css';\r\nimport {settingsFromPage} from './SettingPage';\r\n\r\n\r\nclass EachResult extends React.Component{\r\n    copyScannerResult=e=>{\r\n        const kUtil=window.kUtil;\r\n        // kUtil.copyToClipBoard(this.props.content);\r\n        kUtil.copyToClipBoard(e.target.innerText);\r\n        var config={};\r\n        config.content=\"copy successfully!\";\r\n        config.icon=<Icon type=\"smile\" style={{color:\"#FE8E14\"}}></Icon>;\r\n        message.config({\r\n            top:window.innerHeight-180,\r\n            duration:1.5,\r\n        });\r\n        message.open(config);\r\n    }\r\n\r\n    render(){\r\n        let txt = this.props.content;\r\n        let possibleLink = txt;\r\n        if (!txt.startsWith('http') && (txt.startsWith('www') || -1 !== txt.indexOf('.com') ||\r\n            -1 !== txt.indexOf('.net') || -1 !== txt.indexOf('.org') || -1 !== txt.indexOf('.edu'))) {\r\n            possibleLink = 'http://' + txt;\r\n        }\r\n        let isLink = possibleLink.startsWith('http');\r\n        return(\r\n            <div className=\"result-content\">\r\n                <>\r\n                    <><span style={{color:\"#FE8E14\"}}>{this.props.format}: </span></>\r\n                    {\r\n                        isLink?\r\n                        <a href={possibleLink} target={\"_blank\"} style={{textDecoration:\"underline\"}} >{this.props.content}</a>\r\n                        : <span onClick={this.copyScannerResult} style={{fontSize:16}}>{this.props.content}</span>\r\n                    }\r\n                    <><span style={{color:\"#FE8E14\"}}> x {this.props.count}</span></>\r\n                    {/* <Button type=\"link\" icon=\"copy\" size=\"small\" style={{float:\"right\"}}  onClick={this.copyScannerResult.bind(this)}></Button> */}\r\n                </>\r\n            </div>\r\n            )\r\n        }\r\n}\r\n\r\n\r\nclass Result extends React.Component{\r\n    render(){\r\n        const resultItems = this.props.resultsInfo.slice(-3).map((ri,index)=>\r\n            <EachResult key={index} content = {ri.result!==undefined?ri.result.BarcodeText:ri.BarcodeText} \r\n            count={ri.count} \r\n            format={ri.result!==undefined?ri.result.BarcodeFormatString:ri.BarcodeFormatString}>\r\n            </EachResult>\r\n        );\r\n        \r\n        return(\r\n            <div className=\"result-container\">\r\n                {resultItems}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass Canvas extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            isDraw:false\r\n        });\r\n        this.canvas = React.createRef();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        let point = this.props.point;\r\n        let x1 = point[0].split(',')[0];\r\n        let y1 = point[0].split(',')[1];\r\n        let x2 = point[1].split(',')[0];\r\n        let y2 = point[1].split(',')[1];\r\n        let x3 = point[2].split(',')[0];\r\n        let y3 = point[2].split(',')[1];\r\n        let x4 = point[3].split(',')[0];\r\n        let y4 = point[3].split(',')[1];\r\n\r\n        let leftMin = Math.min(x1, x2, x3, x4);\r\n        //let rightMax = Math.max(x1, x2, x3, x4);\r\n        let topMin = Math.min(y1, y2, y3, y4);\r\n        //let bottomMax = Math.max(y1, y2, y3, y4);\r\n\r\n        let _x1 = x1 - leftMin;\r\n        let _x2 = x2 - leftMin;\r\n        let _x3 = x3 - leftMin;\r\n        let _x4 = x4 - leftMin;\r\n        let _y1 = y1 - topMin;\r\n        let _y2 = y2 - topMin;\r\n        let _y3 = y3 - topMin;\r\n        let _y4 = y4 - topMin;\r\n\r\n\r\n        var canvas = this.canvas.current;\r\n        //console.log(_x1,_y1,_x2,_y2,_x3,_y3,_x4,_y4);\r\n        if(canvas.getContext){\r\n            //debugger;\r\n            let ctx = canvas.getContext(\"2d\");\r\n            ctx.fillStyle = 'rgba(254,180,32,0.5)';\r\n            ctx.clearRect(0,0,canvas.width,canvas.height);\r\n            ctx.beginPath();\r\n            ctx.moveTo(_x1, _y1);\r\n            ctx.lineTo(_x2, _y2);\r\n            ctx.lineTo(_x3, _y3);\r\n            ctx.lineTo(_x4, _y4);\r\n            ctx.fill();\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        let point = this.props.point;\r\n        let x1 = point[0].split(',')[0];\r\n        let y1 = point[0].split(',')[1];\r\n        let x2 = point[1].split(',')[0];\r\n        let y2 = point[1].split(',')[1];\r\n        let x3 = point[2].split(',')[0];\r\n        let y3 = point[2].split(',')[1];\r\n        let x4 = point[3].split(',')[0];\r\n        let y4 = point[3].split(',')[1];\r\n\r\n        let leftMin = Math.min(x1, x2, x3, x4);\r\n        let rightMax = Math.max(x1, x2, x3, x4);\r\n        let topMin = Math.min(y1, y2, y3, y4);\r\n        let bottomMax = Math.max(y1, y2, y3, y4);\r\n        let cvsStyle={\r\n            position:\"absolute\",\r\n            left:leftMin+\"px\",\r\n            top:topMin+\"px\",\r\n            //background:\"#80008021\",\r\n        };\r\n        return(\r\n            <>\r\n            {\r\n                <canvas\r\n                ref={this.canvas}\r\n                width={rightMax-leftMin} height={bottomMax-topMin} style={cvsStyle}>\r\n                </canvas>\r\n            }\r\n            </>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n// const Dynamsoft = window.Dynamsoft;\r\nvar Dynamsoft;\r\nlet scanner = null;\r\n\r\n\r\nclass Scanner extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            resultsInfo:[],\r\n            isOpen:false,\r\n            resultsPoint:[],\r\n            camera:0,\r\n            cameraList:[],\r\n            isFullRegion:this.props.isFullRegion,\r\n            resolution:settingsFromPage.resolution,\r\n            barcodeFormat:settingsFromPage.barcodeformat,\r\n            localization:settingsFromPage.localization,\r\n            deblurLevel:settingsFromPage.deblurlevel,\r\n            cameraOptions:null,\r\n        });\r\n\r\n    }\r\n\r\n\r\n    showScanner(){\r\n        var updateFrame = ()=>{\r\n            var regionScale = 1.0*this.props.region/100;\r\n            var regionWidth =  regionScale*window.innerWidth;\r\n            var regionHeight = 0.5*regionScale*window.innerHeight;\r\n            var r =scanner.getResolution();\r\n            var vW = r[0];\r\n            var vH = r[1];\r\n            var left,right,top,bottom;\r\n            if(vW>=window.innerWidth){      //resolution > screen width, mainly mobiles\r\n                if(regionWidth>=250){\r\n                    left = (window.innerWidth-regionWidth)/2/vW;\r\n                    right = (window.innerWidth+regionWidth)/2/vW;\r\n                    top = (vH-250)/2/vH;\r\n                    bottom = (vH+250)/2/vH;\r\n                }\r\n                else{\r\n                    left = (window.innerWidth-regionWidth)/2/vW;\r\n                    right = (window.innerWidth+regionWidth)/2/vW;\r\n                    top = (vH-regionHeight)/2/vH;\r\n                    bottom = (vH+regionHeight)/2/vH;\r\n                    //console.log(window.innerWidth,regionScale*window.innerWidth,regionWidth,left,right);\r\n                    // console.log(\"regionWidth<250 and vw>window.innerWidth\");\r\n                }\r\n            }\r\n\r\n            else if(vW<window.innerWidth){  //resolution > screen width, mainly pc\r\n                if(regionWidth>=250){\r\n                    left = (vW-250)/2/vW;\r\n                    right = (vW+250)/2/vW;\r\n                    top = (vH-250)/2/vH;\r\n                    bottom = (vH+250)/2/vH;\r\n                    // console.log(\"regionWidth>250 and vw<window.innerWidth\");\r\n                }\r\n                else {\r\n                    left = (vW-regionWidth)/2/vW;\r\n                    right = (vW + regionWidth)/2/vW;\r\n                    top = (vH-regionHeight)/2/vH;\r\n                    bottom = (vH+regionHeight)/2/vH;\r\n                }\r\n\r\n            }\r\n\r\n            let settings = scanner.getRuntimeSettings();\r\n\r\n            if(!this.state.isFullRegion){\r\n                settings.region.left = Math.round(left*100);\r\n                settings.region.right = Math.round(right*100);\r\n                settings.region.top = Math.round(top*100);\r\n                settings.region.bottom = Math.round(bottom*100);\r\n                settings.region.measuredByPercentage = 1; \r\n                scanner.updateRuntimeSettings(settings);\r\n                //console.log(scanner.getRuntimeSettings());\r\n            }\r\n            else{\r\n                settings.region.left = 0;\r\n                settings.region.right = 100;\r\n                settings.region.top = 0;\r\n                settings.region.bottom = 100;\r\n                settings.region.measuredByPercentage = 1; \r\n                scanner.updateRuntimeSettings(settings);\r\n            }\r\n        };\r\n\r\n        Dynamsoft.BarcodeScanner.createInstance({\r\n            intervalTime:200,\r\n            UIElement:document.getElementById('scanner'),\r\n            videoSettings: { video: { width: { ideal: 1280 }, height: {ideal: 720 }, facingMode: 'environment' } },\r\n            onFrameRead: results => {\r\n                let resultPointsPerFrame=[];\r\n                for (let i = 0; i < results.length; i++){\r\n                    let result = results[i];\r\n                    resultPointsPerFrame.push(result.LocalizationResult.ResultPoints);\r\n                }\r\n\r\n                let resultsInfo = scanner.arrDiffCodeInfo;\r\n                this.setState({\r\n                    resultsInfo:resultsInfo,\r\n                    resultsPoint:resultPointsPerFrame,\r\n                    isFullRegion:this.props.isFullRegion,\r\n                });\r\n\r\n                if(scanner!==null){\r\n                    updateFrame();\r\n                    //console.log(scanner.getRuntimeSettings());\r\n                }\r\n                // updateFrame();\r\n\r\n                //console.log(this.state.isFullRegion);\r\n            },\r\n            onUnduplicatedRead: (txt, result) => {\r\n                console.log(result);\r\n                \r\n            }\r\n        }).then(s => {\r\n            scanner = s;\r\n            scanner.updateVideoSettings({ video: { width: this.state.resolution[0], height:this.state.resolution[1], facingMode: \"environment\" } });\r\n            // if(scanner._isOpen===false){\r\n                console.log(\"open!\");\r\n                scanner.show().then((paras)=>{\r\n                        // scanner.setResolution(this.state.resolution);\r\n                        var settings = scanner.getRuntimeSettings();\r\n                        settings.barcodeFormatIds=this.state.barcodeFormat;\r\n                        settings.localizationModes=this.state.localization;\r\n                        settings.deblurLevel = this.state.deblurLevel;\r\n                        scanner.updateRuntimeSettings(settings).then(()=>{\r\n                            console.log(scanner.getRuntimeSettings());\r\n                            updateFrame();\r\n                        }).then(()=>{\r\n                            scanner.getAllCameras().then((cameras)=>{\r\n                                this.setState({\r\n                                    cameraList:cameras,\r\n                                    cameraOptions:cameras.map((cameraOption,index)=>\r\n                                        <Select.Option value={\"camera:\"+index} key={cameraOption.deviceId}>{cameraOption.label}</Select.Option>\r\n                                        // <Option value={cameraOption.deviceId} key={\"camera\"+index}>xx</Option>\r\n                                    )\r\n                                });    \r\n                                // scanner.setCurrentCamera(cameras[this.state.camera].deviceId);\r\n                            });\r\n                        });                        \r\n                        }) \r\n            // }\r\n            // else{\r\n            //     console.log(\"close!\");\r\n            //     scanner.close();\r\n            // }\r\n        }).then(()=>{\r\n            this.setState({\r\n                isOpen:!this.state.isOpen\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        Dynamsoft = window.Dynamsoft;\r\n        this.showScanner();\r\n        console.log(this.state.barcodeFormat,this.state.cameraOptions);\r\n        \r\n    }\r\n\r\n    componentWillUnmount(){\r\n        scanner!=null&&scanner.close();\r\n        scanner!=null&&scanner.destroy();\r\n    }\r\n\r\n    handleFullRegion(){\r\n        this.setState({\r\n            isFullRegion:this.state.isFullRegion,\r\n        })\r\n    }\r\n   \r\n    onSwitchCamera(value){\r\n        scanner.getAllCameras().then(infos=>{\r\n            // var numOfCamera = this.state.cameraList.length;\r\n            this.setState({\r\n                //camera:this.state.camera===numOfCamera-1?0:this.state.camera+1\r\n                camera:value.split(\":\")[1]\r\n            });\r\n            return infos;\r\n        }).then((infos)=>{\r\n            scanner.setCurrentCamera(infos[this.state.camera].deviceId);\r\n            var config={};\r\n            config.content=\"Switch to \"+infos[this.state.camera].label+\" successfully!\";\r\n            config.icon=<Icon type=\"smile\" style={{color:\"#FE8E14\"}}></Icon>;\r\n            message.config({\r\n                top:window.innerHeight-180,\r\n                duration:1.5,\r\n            });\r\n            message.open(config);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const allCanvas = this.state.resultsPoint.map((eachResult,index)=>\r\n            <Canvas key={index} point={eachResult}></Canvas>\r\n        );\r\n\r\n        return(\r\n            <>\r\n            <style type=\"text/css\">\r\n                {`\r\n                .waiting{\r\n                    position:absolute;\r\n                    left:50%;\r\n                    top:50%;\r\n                    transform:translate(-50%);\r\n                    color:#FE8E14;\r\n                    transition: opacity 1000ms ease-in;\r\n                }\r\n\r\n                .fade-enter.fade-enter-active {\r\n                    opacity:1;\r\n                    transition: opacity 1000ms ease-in;\r\n                }\r\n\r\n                .fade-enter{\r\n                    opacity:0;\r\n                }\r\n\r\n                .fade-leave{\r\n                    opacity: 1; \r\n                }\r\n\r\n                .fade-leave.fade-leave-active{\r\n                    opacity:0;\r\n                    transition: opacity 3000ms ease-in;\r\n                }\r\n                \r\n                .fade-appear{\r\n                    opacity:0;\r\n                }\r\n\r\n                .fade-appear.fade-appear-active {\r\n                    opacity: 1;\r\n                    transition: opacity 2000ms ease-in;\r\n                }\r\n                `}\r\n            </style>\r\n            <ReactCSSTransitionGroup\r\n                transitionName=\"fade\"\r\n                transitionLeave={true}\r\n                transitionAppear={false}\r\n                transitionEnter={false}\r\n                transitionAppearTimeout={500}\r\n                transitionLeaveTimeout={3500}\r\n                transitionEnterTimeout={2500}\r\n            >\r\n                {\r\n                    !this.state.isOpen&&\r\n                    <Spin \r\n                    className=\"waiting\" \r\n                    tip=\"Accessing Camera list...\" \r\n                    indicator={<Icon type=\"smile\" spin style={{ fontSize: \"3rem\" ,}}></Icon>}>\r\n                    </Spin>    \r\n                }\r\n            </ReactCSSTransitionGroup>           \r\n            \r\n            <div id='scanner' style={{position:\"absolute\",width:\"100%\"}}>\r\n                <div className=\"video-container\">\r\n                    <video className='dbrScanner-video custom-video' playsInline={true}></video>\r\n                {/*{*/}\r\n                    {/*this.state.resultsPoint.length&&*/}\r\n                    {/*<>{allCanvas}</>*/}\r\n                {/*}*/}\r\n                <>{allCanvas}</>\r\n                </div>\r\n\r\n            </div>\r\n            <Result resultsInfo={this.state.resultsInfo}></Result>\r\n            {/* <button onClick={this.onSwitchCamera.bind(this)} style={{position:\"absolute\",top:\"60px\",left:0}}>切换相机</button> */}\r\n            {/* <Button type=\"primary\" size=\"small\" onClick={this.onSwitchCamera.bind(this)} style={{position:\"absolute\",top:\"60px\",left:0,backgroundColor:\"rgb(254, 142, 20)\",border:\"0\"}}>切换相机</Button> */}\r\n            {\r\n                this.state.cameraList.length&&\r\n                <Select onChange={this.onSwitchCamera.bind(this)} \r\n                style={{ position:\"absolute\",top:\"60px\",left:0,width: \"20%\",maxWidth:130,border:\"0\",color:\"#FE8E14\",opacity:\"0.5\" }} \r\n                // defaultValue={\"camera:0\"}\r\n                // placeholder=\"camera\"\r\n                suffixIcon={<Icon type=\"camera\" style={{color:\"#FE8E14\"}}></Icon>}\r\n                defaultActiveFirstOption={false}\r\n                >\r\n                    {this.state.cameraOptions}\r\n                </Select>\r\n                \r\n            }\r\n            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n//export default connect(mapStateToProps,mapDispatchsToProps)(Scanner);\r\nexport default Scanner;\r\nexport {Result,EachResult};","import React from 'react';\r\nimport \"./Layout.css\";\r\nimport {Icon} from 'antd';\r\nimport SettingPage from './SettingPage';\r\nimport FilePage from './FilePage';\r\nimport Scanner from \"./Scanner\";\r\n\r\nfunction RegionBtn(props){\r\n    return(\r\n        <label className=\"region\" onClick={props.handleRegion}>\r\n            <Icon type={props.isFullRegion?\"fullscreen-exit\":\"fullscreen\"} style={{fontSize:\"2rem\",color:\"#FE8E14\"}}></Icon>\r\n        </label>\r\n    )\r\n}\r\n\r\nfunction ScannerArea(props){\r\n    return(\r\n        <div className=\"scanner-container\">\r\n            <div className=\"frame\" style={{width:props.region+\"%\",height:props.region+\"%\",maxWidth:\"250px\",maxHeight:\"250px\"}}>\r\n                <label className=\"flashlight\">\r\n                    <Icon type=\"funnel-plot\" style={{fontSize:\"2rem\",color:\"#FE8E14\"}}></Icon>\r\n                </label>\r\n            </div>\r\n            <div className=\"tip-info\">\r\n                <p>Put the code in the box and scan it automatically.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nclass Body extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            isFullRegion:false,\r\n        })\r\n    }\r\n\r\n    handleRegion(){\r\n        this.setState({\r\n            isFullRegion:!this.state.isFullRegion,\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        var regionSize = 60;\r\n        return (\r\n            <div className=\"home-screen\">\r\n                <Scanner region={regionSize} isFullRegion={this.state.isFullRegion}></Scanner>\r\n                {\r\n                    !this.state.isFullRegion&&\r\n                    <ScannerArea region={regionSize}></ScannerArea>\r\n                }\r\n                <div className=\"dynam-info\">\r\n                    {/* <p>Dynamsoft DBR</p> */}\r\n                    <a href=\"https://www.dynamsoft.com\" ><img src=\"../static/img/logo-dynamsoft-blackBg-190x47.png\" alt=\"logo\"></img></a>\r\n                </div>\r\n                \r\n                <RegionBtn handleRegion={this.handleRegion.bind(this)} isFullRegion={this.state.isFullRegion}></RegionBtn>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet clicks = [];\r\nlet timeout;\r\n\r\nclass Main extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            isShowSettingPage:false,\r\n            isShowFilePage:false,\r\n            isFullScreen:false,\r\n            isFullRegion:false,\r\n            settingDisplayStyle:{display:\"none\"},\r\n            fileDisplayStyle:{display:\"none\"}\r\n        })\r\n    }\r\n\r\n    handleRegion(){\r\n        this.setState({\r\n            isFullRegion:!this.state.isFullRegion,\r\n        })\r\n    }\r\n\r\n    handleShowSettingPage(){\r\n        this.setState({\r\n            isShowSettingPage:!this.state.isShowSettingPage,\r\n            settingDisplayStyle:this.state.settingDisplayStyle.display===\"none\"?{display:\"block\"}:{display:\"none\"}\r\n        });\r\n    }\r\n\r\n    handleShowFilePage(){\r\n        this.setState({\r\n            isShowFilePage:!this.state.isShowFilePage,\r\n            fileDisplayStyle:this.state.fileDisplayStyle.display===\"none\"?{display:\"block\"}:{display:\"none\"}\r\n        });\r\n    }\r\n\r\n    switchFullScreen(){\r\n        if(!this.state.isFullScreen){\r\n            if(document.documentElement.requestFullscreen){\r\n                document.documentElement.requestFullscreen();\r\n            }\r\n            else if(document.documentElement.webkitRequestFullScreen){\r\n                document.documentElement.webkitRequestFullScreen();\r\n            }\r\n            else if(document.documentElement.mozRequestFullScreen){\r\n                document.documentElement.mozRequestFullScreen();\r\n            }\r\n            else{\r\n                document.documentElement.msRequestFullscreen();\r\n            }\r\n            //document.documentElement.requestFullscreen(); \r\n        }\r\n            \r\n        else\r\n            document.exitFullscreen();\r\n        this.setState({\r\n            isFullScreen:!this.state.isFullScreen,\r\n        })       \r\n    }\r\n\r\n    fullSceenClickHandler(event){\r\n        // event.preventDefault();\r\n        // clicks.push(new Date().getTime());\r\n        // window.clearTimeout(timeout);\r\n        // timeout = window.setTimeout(()=>{\r\n        //     if (clicks.length > 1 && clicks[clicks.length - 1] - clicks[clicks.length - 2] < 250){\r\n        //         this.switchFullScreen();\r\n        //     }\r\n        // },250);\r\n        this.switchFullScreen();\r\n    }   \r\n\r\n    render(){\r\n        var regionSize = 60;\r\n        var home = (\r\n            <div className=\"home-screen\">\r\n                <Scanner region={regionSize} isFullRegion={this.state.isFullRegion}></Scanner>\r\n                {\r\n                    !this.state.isFullRegion&&\r\n                    <ScannerArea region={regionSize}></ScannerArea>\r\n                }\r\n                <div className=\"dynam-info\">\r\n                    <a href=\"https://www.dynamsoft.com\" ><img src=\"img/logo-dynamsoft-blackBg-190x47.png\" alt=\"logo\"></img></a>\r\n                </div>\r\n                <RegionBtn handleRegion={this.handleRegion.bind(this)} isFullRegion={this.state.isFullRegion}></RegionBtn>\r\n            </div>\r\n        );\r\n\r\n        var extra = (\r\n            <>\r\n            <div className=\"settingBtn-container\" >\r\n                <Icon type=\"setting\" style={{fontSize:\"2.5rem\",color:\"#FE8E14\"}} onClick={this.handleShowSettingPage.bind(this)} ></Icon>\r\n            </div>\r\n            <div className=\"double-click\" >\r\n                <label onClick={this.fullSceenClickHandler.bind(this)}>click {this.state.isFullScreen&&\"exit\"} full screen</label>\r\n            </div>\r\n            <div className=\"selImgBtn-container\">\r\n                <Icon type=\"plus\" style={{fontSize:\"2.5rem\",color:\"#FE8E14\"}} onClick={this.handleShowFilePage.bind(this)}></Icon>\r\n            </div>\r\n            \r\n            <div style={this.state.settingDisplayStyle}>\r\n                <SettingPage onBackClick={this.handleShowSettingPage.bind(this)} ></SettingPage>\r\n            </div>\r\n            {\r\n                this.state.isShowFilePage&&\r\n                <div style={this.state.fileDisplayStyle}>\r\n                    <FilePage onBackClick={this.handleShowFilePage.bind(this)}></FilePage>\r\n                </div>    \r\n            }\r\n            \r\n            </>\r\n        );\r\n        \r\n            return(\r\n                <>\r\n                {(this.state.isShowSettingPage)?null:home}\r\n                {/* extra:setting page,setting btn,file page,file btn */}\r\n                {extra}     \r\n\r\n                </>\r\n            )\r\n        \r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nclass Layout extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            isOpen:false,\r\n            isShow:true,\r\n        })\r\n    }\r\n\r\n    handleShow(){\r\n        this.setState({\r\n            isShow:!this.state.isShow,\r\n        });\r\n        console.log(this.state.isShow);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"wrap-container\">\r\n                {\r\n                    this.state.isShow&&\r\n                    <>\r\n                    {/* <Body></Body> */}\r\n                    {/* <Head></Head> */}\r\n                    <Main></Main>\r\n                    </>\r\n                }\r\n            </div>   \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Layout;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  console.log(process.env.NODE_ENV, process.env.PUBLIC_URL);\n  if ((process.env.NODE_ENV === 'production'||process.env.NODE_ENV ==='development') && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n    console.log(\"register!\");\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/server-worker.js`;\n      console.log(swUrl);\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Layout from './Layout'\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Layout/>,document.getElementById('root'));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}